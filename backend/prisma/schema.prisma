generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @default(autoincrement()) @id
  email String @unique
  name String?
  surname String?
  password String
  favoriteItems FavoriteItem[]
  cart Cart? 
  orders Order[]
  role Role @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
}

model Item {
  id Int @default(autoincrement()) @id
  name String
  price Int
  image String?
  images String[]
  material String
  isActive Boolean @default(true)
  category Category @relation(fields: [categoryId], references: [id])
  categoryId Int
  collection Collection @relation(fields: [collectionId], references: [id])
  collectionId Int
  isNew Boolean @default(true)
  favoritedBy FavoriteItem[]
  cartItems CartItem[] 
  orderItems OrderItem[] 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model FavoriteItem {
  user   User @relation(fields: [userId], references: [id])
  userId Int
  item   Item @relation(fields: [itemId], references: [id])
  itemId Int
  @@id([userId, itemId])
}

model Category {
  id Int @default(autoincrement()) @id
  name String @unique
  items Item[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Collection {
  id Int @default(autoincrement()) @id
  name String @unique
  items Item[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model Cart {
  id     Int @default(autoincrement()) @id
  user   User @relation(fields: [userId], references: [id])
  userId Int @unique 
  cartItems CartItem[] 
}

model CartItem {
  id       Int  @default(autoincrement()) @id
  cart     Cart @relation(fields: [cartId], references: [id])
  cartId   Int
  item     Item @relation(fields: [itemId], references: [id])
  itemId   Int
  quantity Int 
  @@unique([cartId, itemId]) 
}

model Order {
  id           Int      @default(autoincrement()) @id
  user         User     @relation(fields: [userId], references: [id])
  userId       Int
  createdAt    DateTime @default(now())
  totalAmount  Int 
  status       OrderStatus  @default(PENDING)     
  orderItems OrderItem[] 
}

enum OrderStatus {
  PENDING   
  PAID      
  SHIPPED   
  DELIVERED
  CANCELLED 
}

model OrderItem {
  id       Int    @default(autoincrement()) @id
  order    Order  @relation(fields: [orderId], references: [id])
  orderId  Int
  item     Item   @relation(fields: [itemId], references: [id])
  itemId   Int
  quantity Int 
  price    Int 
}